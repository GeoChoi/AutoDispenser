
autoDisplay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000022a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000022a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000025c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a1c  00000000  00000000  000002dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000082e  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000422  00000000  00000000  00001526  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00001948  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000458  00000000  00000000  000019ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  00001e04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001edc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	32 d0       	rcall	.+100    	; 0xfe <main>
  9a:	9b c0       	rjmp	.+310    	; 0x1d2 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <InitializeTimer1>:
//PWM ??? ??? ?? ??? ? ??? ???. ??? 8bit ???/??? ??

void InitializeTimer1(void)
{
	// ?? 14, ?? PWM ??
	TCCR1A |= (1 << WGM11);
  9e:	8f b5       	in	r24, 0x2f	; 47
  a0:	82 60       	ori	r24, 0x02	; 2
  a2:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12) | (1 << WGM13);
  a4:	8e b5       	in	r24, 0x2e	; 46
  a6:	88 61       	ori	r24, 0x18	; 24
  a8:	8e bd       	out	0x2e, r24	; 46
	
	// ??? ??
	// TOP : ICR1, ????? : OCR1A ????
	TCCR1A |= (1 << COM1A1);
  aa:	8f b5       	in	r24, 0x2f	; 47
  ac:	80 68       	ori	r24, 0x80	; 128
  ae:	8f bd       	out	0x2f, r24	; 47
	
	
	TCCR1B |= (1 << CS11);		// ??? 8, 2MHz, ?? ???? 64?
  b0:	8e b5       	in	r24, 0x2e	; 46
  b2:	82 60       	ori	r24, 0x02	; 2
  b4:	8e bd       	out	0x2e, r24	; 46
	
	ICR1 = ICR1VALUE-1;				// 2Mhz/2000 = 1000Hz
  b6:	8f ec       	ldi	r24, 0xCF	; 207
  b8:	97 e0       	ldi	r25, 0x07	; 7
  ba:	97 bd       	out	0x27, r25	; 39
  bc:	86 bd       	out	0x26, r24	; 38
	OCR1A = ICR1;//0?? ????? 1/2M ??? ??? ???? ???? ???.
  be:	86 b5       	in	r24, 0x26	; 38
  c0:	97 b5       	in	r25, 0x27	; 39
  c2:	9b bd       	out	0x2b, r25	; 43
  c4:	8a bd       	out	0x2a, r24	; 42
  c6:	08 95       	ret

000000c8 <OC2PinStart>:



void OC2PinStart(void) {
	//???? ????
	TCCR2 |= (1 << COM20);
  c8:	85 b5       	in	r24, 0x25	; 37
  ca:	80 61       	ori	r24, 0x10	; 16
  cc:	85 bd       	out	0x25, r24	; 37
	TCCR2 &= ~(1 << COM21);
  ce:	85 b5       	in	r24, 0x25	; 37
  d0:	8f 7d       	andi	r24, 0xDF	; 223
  d2:	85 bd       	out	0x25, r24	; 37
  d4:	08 95       	ret

000000d6 <OC2PinStop>:
}

void OC2PinStop(void) {
	//???? ????
	TCCR2 &= ~(1 << COM20);
  d6:	85 b5       	in	r24, 0x25	; 37
  d8:	8f 7e       	andi	r24, 0xEF	; 239
  da:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= (1 << COM21);
  dc:	85 b5       	in	r24, 0x25	; 37
  de:	80 62       	ori	r24, 0x20	; 32
  e0:	85 bd       	out	0x25, r24	; 37
  e2:	08 95       	ret

000000e4 <InitializeTimer2>:
}

void InitializeTimer2(void)
{
	OC2PinStop();
  e4:	f8 df       	rcall	.-16     	; 0xd6 <OC2PinStop>
	TCCR2 |= (1 << WGM21);//CTC??
  e6:	85 b5       	in	r24, 0x25	; 37
  e8:	88 60       	ori	r24, 0x08	; 8
  ea:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= (1 << CS20);// ??? 32, 
  ec:	85 b5       	in	r24, 0x25	; 37
  ee:	81 60       	ori	r24, 0x01	; 1
  f0:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= (1 << CS21);// ??? 32, 500kHz
  f2:	85 b5       	in	r24, 0x25	; 37
  f4:	82 60       	ori	r24, 0x02	; 2
  f6:	85 bd       	out	0x25, r24	; 37
	//TCCR2 |= (1 << CS22);// ??? 32,
		
	
	OCR2 = 60;// 250kHz/125 = 2000Hz
  f8:	8c e3       	ldi	r24, 0x3C	; 60
  fa:	83 bd       	out	0x23, r24	; 35
  fc:	08 95       	ret

000000fe <main>:
}

int main(void)
{
	// ?? ?? ?? ???? ??
	DDRA |= (1 << PORTA0);
  fe:	8a b3       	in	r24, 0x1a	; 26
 100:	81 60       	ori	r24, 0x01	; 1
 102:	8a bb       	out	0x1a, r24	; 26
	
	//X? ???? EN, CW, clock
	DDRB |= (1 << PORTB5);//clock
 104:	87 b3       	in	r24, 0x17	; 23
 106:	80 62       	ori	r24, 0x20	; 32
 108:	87 bb       	out	0x17, r24	; 23
	DDRC |= (1 << PORTC1) | (1 << PORTC2);//PORTC1 : CW, PORTC2 : EN;
 10a:	84 b3       	in	r24, 0x14	; 20
 10c:	86 60       	ori	r24, 0x06	; 6
 10e:	84 bb       	out	0x14, r24	; 20
	
	//Y? ???? EN, CW, clock
	DDRB |= (1 << PORTB7);
 110:	87 b3       	in	r24, 0x17	; 23
 112:	80 68       	ori	r24, 0x80	; 128
 114:	87 bb       	out	0x17, r24	; 23
	DDRC |= (1 << PORTC3) | (1 << PORTC4);//PORTC3 : CW, PORTC4 : EN;
 116:	84 b3       	in	r24, 0x14	; 20
 118:	88 61       	ori	r24, 0x18	; 24
 11a:	84 bb       	out	0x14, r24	; 20

	DDRB |= (1 << PORTB4);
 11c:	87 b3       	in	r24, 0x17	; 23
 11e:	80 61       	ori	r24, 0x10	; 16
 120:	87 bb       	out	0x17, r24	; 23

	PORTC &= ~(1 << PORTC2);//PORTC2 low : enable motor driver
 122:	85 b3       	in	r24, 0x15	; 21
 124:	8b 7f       	andi	r24, 0xFB	; 251
 126:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1 << PORTC4);//PORTC4 low : enable motor driver
 128:	85 b3       	in	r24, 0x15	; 21
 12a:	8f 7e       	andi	r24, 0xEF	; 239
 12c:	85 bb       	out	0x15, r24	; 21
	
	InitializeTimer1();
 12e:	b7 df       	rcall	.-146    	; 0x9e <InitializeTimer1>
	InitializeTimer2();
 130:	d9 df       	rcall	.-78     	; 0xe4 <InitializeTimer2>
 132:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 134:	83 e2       	ldi	r24, 0x23	; 35
 136:	94 ef       	ldi	r25, 0xF4	; 244
 138:	21 50       	subi	r18, 0x01	; 1
 13a:	80 40       	sbci	r24, 0x00	; 0
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0x3a>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0x44>
 142:	00 00       	nop
 144:	85 b3       	in	r24, 0x15	; 21
	_delay_ms(5000);
	
	while(1)
	{ 
		
		PORTC |= (1 << PORTC1);//PORTC1 high : CCW : leftmove
 146:	82 60       	ori	r24, 0x02	; 2
 148:	85 bb       	out	0x15, r24	; 21
 14a:	08 ee       	ldi	r16, 0xE8	; 232
		OCR1A = ICR1VALUE/2;
 14c:	13 e0       	ldi	r17, 0x03	; 3
 14e:	1b bd       	out	0x2b, r17	; 43
 150:	0a bd       	out	0x2a, r16	; 42
 152:	85 b3       	in	r24, 0x15	; 21
		
		PORTC |= (1 << PORTC3);//PORTC3 high : CCW : down
 154:	88 60       	ori	r24, 0x08	; 8
 156:	85 bb       	out	0x15, r24	; 21
		OC2PinStart();
 158:	b7 df       	rcall	.-146    	; 0xc8 <OC2PinStart>
 15a:	8b b3       	in	r24, 0x1b	; 27
		
		PORTA &= ~(1 << PORTA0);
 15c:	8e 7f       	andi	r24, 0xFE	; 254
 15e:	8b bb       	out	0x1b, r24	; 27
 160:	2f ef       	ldi	r18, 0xFF	; 255
 162:	83 ed       	ldi	r24, 0xD3	; 211
 164:	90 e3       	ldi	r25, 0x30	; 48
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0x68>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0x72>
 170:	00 00       	nop
		_delay_ms(1000);
		
		OC2PinStop();
 172:	b1 df       	rcall	.-158    	; 0xd6 <OC2PinStop>
 174:	c0 ed       	ldi	r28, 0xD0	; 208
		OCR1A = ICR1VALUE;
 176:	d7 e0       	ldi	r29, 0x07	; 7
 178:	db bd       	out	0x2b, r29	; 43
 17a:	ca bd       	out	0x2a, r28	; 42
 17c:	2f ef       	ldi	r18, 0xFF	; 255
 17e:	83 ed       	ldi	r24, 0xD3	; 211
 180:	90 e3       	ldi	r25, 0x30	; 48
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0x84>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0x8e>
 18c:	00 00       	nop
 18e:	85 b3       	in	r24, 0x15	; 21
		_delay_ms(1000);
		
		PORTC &= ~(1 << PORTC1);//PORTC1 low : CW :rightmove
 190:	8d 7f       	andi	r24, 0xFD	; 253
 192:	85 bb       	out	0x15, r24	; 21
 194:	1b bd       	out	0x2b, r17	; 43
		OCR1A = ICR1VALUE/2;
 196:	0a bd       	out	0x2a, r16	; 42
		
		PORTC &= ~(1 << PORTC3);//PORTC3 low : CW : up
 198:	85 b3       	in	r24, 0x15	; 21
 19a:	87 7f       	andi	r24, 0xF7	; 247
 19c:	85 bb       	out	0x15, r24	; 21
		OC2PinStart();
 19e:	94 df       	rcall	.-216    	; 0xc8 <OC2PinStart>
 1a0:	8b b3       	in	r24, 0x1b	; 27
		PORTA |= (1 << PORTA0);
 1a2:	81 60       	ori	r24, 0x01	; 1
 1a4:	8b bb       	out	0x1b, r24	; 27
 1a6:	2f ef       	ldi	r18, 0xFF	; 255
 1a8:	83 ed       	ldi	r24, 0xD3	; 211
 1aa:	90 e3       	ldi	r25, 0x30	; 48
 1ac:	21 50       	subi	r18, 0x01	; 1
 1ae:	80 40       	sbci	r24, 0x00	; 0
 1b0:	90 40       	sbci	r25, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <main+0xae>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0xb8>
 1b6:	00 00       	nop
		_delay_ms(1000);
		
		OC2PinStop();
 1b8:	8e df       	rcall	.-228    	; 0xd6 <OC2PinStop>
 1ba:	db bd       	out	0x2b, r29	; 43
		OCR1A = ICR1VALUE;
 1bc:	ca bd       	out	0x2a, r28	; 42
 1be:	2f ef       	ldi	r18, 0xFF	; 255
 1c0:	83 ed       	ldi	r24, 0xD3	; 211
 1c2:	90 e3       	ldi	r25, 0x30	; 48
 1c4:	21 50       	subi	r18, 0x01	; 1
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	90 40       	sbci	r25, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <main+0xc6>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <main+0xd0>
 1ce:	00 00       	nop
 1d0:	b9 cf       	rjmp	.-142    	; 0x144 <main+0x46>

000001d2 <_exit>:
 1d2:	f8 94       	cli

000001d4 <__stop_program>:
 1d4:	ff cf       	rjmp	.-2      	; 0x1d4 <__stop_program>
