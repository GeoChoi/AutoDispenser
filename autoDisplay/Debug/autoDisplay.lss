
autoDisplay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000284  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000230  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aad  00000000  00000000  0000035c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000083d  00000000  00000000  00000e09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000050e  00000000  00000000  00001646  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00001b54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004bc  00000000  00000000  00001c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000021c  00000000  00000000  000020c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000022e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	71 d0       	rcall	.+226    	; 0x17c <main>
  9a:	c8 c0       	rjmp	.+400    	; 0x22c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <InitializeTimer0>:
}

void horizontalStop(void) {
	//비교일치 발생시 핀 LOW
	TCCR2 &= ~(1 << COM20);
	TCCR2 |= (1 << COM21);
  9e:	87 b3       	in	r24, 0x17	; 23
  a0:	80 61       	ori	r24, 0x10	; 16
  a2:	87 bb       	out	0x17, r24	; 23
  a4:	83 b7       	in	r24, 0x33	; 51
  a6:	88 60       	ori	r24, 0x08	; 8
  a8:	83 bf       	out	0x33, r24	; 51
  aa:	83 b7       	in	r24, 0x33	; 51
  ac:	8f 7e       	andi	r24, 0xEF	; 239
  ae:	83 bf       	out	0x33, r24	; 51
  b0:	83 b7       	in	r24, 0x33	; 51
  b2:	80 62       	ori	r24, 0x20	; 32
  b4:	83 bf       	out	0x33, r24	; 51
  b6:	83 b7       	in	r24, 0x33	; 51
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	83 bf       	out	0x33, r24	; 51
  bc:	83 b7       	in	r24, 0x33	; 51
  be:	82 60       	ori	r24, 0x02	; 2
  c0:	83 bf       	out	0x33, r24	; 51
  c2:	8c e7       	ldi	r24, 0x7C	; 124
  c4:	81 bf       	out	0x31, r24	; 49
  c6:	08 95       	ret

000000c8 <InitializeTimer2>:
  c8:	87 b3       	in	r24, 0x17	; 23
  ca:	80 68       	ori	r24, 0x80	; 128
  cc:	87 bb       	out	0x17, r24	; 23
  ce:	85 b5       	in	r24, 0x25	; 37
  d0:	88 60       	ori	r24, 0x08	; 8
  d2:	85 bd       	out	0x25, r24	; 37
  d4:	85 b5       	in	r24, 0x25	; 37
  d6:	8f 7e       	andi	r24, 0xEF	; 239
  d8:	85 bd       	out	0x25, r24	; 37
  da:	85 b5       	in	r24, 0x25	; 37
  dc:	80 62       	ori	r24, 0x20	; 32
  de:	85 bd       	out	0x25, r24	; 37
  e0:	85 b5       	in	r24, 0x25	; 37
  e2:	81 60       	ori	r24, 0x01	; 1
  e4:	85 bd       	out	0x25, r24	; 37
  e6:	85 b5       	in	r24, 0x25	; 37
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	85 bd       	out	0x25, r24	; 37
  ec:	8c e7       	ldi	r24, 0x7C	; 124
  ee:	83 bd       	out	0x23, r24	; 35
  f0:	08 95       	ret

000000f2 <InitializeTimer3>:
  f2:	82 b1       	in	r24, 0x02	; 2
  f4:	88 63       	ori	r24, 0x38	; 56
  f6:	82 b9       	out	0x02, r24	; 2
  f8:	eb e8       	ldi	r30, 0x8B	; 139
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	82 60       	ori	r24, 0x02	; 2
 100:	80 83       	st	Z, r24
 102:	aa e8       	ldi	r26, 0x8A	; 138
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	8c 91       	ld	r24, X
 108:	88 61       	ori	r24, 0x18	; 24
 10a:	8c 93       	st	X, r24
 10c:	80 81       	ld	r24, Z
 10e:	8f 7b       	andi	r24, 0xBF	; 191
 110:	80 83       	st	Z, r24
 112:	80 81       	ld	r24, Z
 114:	80 68       	ori	r24, 0x80	; 128
 116:	80 83       	st	Z, r24
 118:	80 81       	ld	r24, Z
 11a:	8f 7e       	andi	r24, 0xEF	; 239
 11c:	80 83       	st	Z, r24
 11e:	80 81       	ld	r24, Z
 120:	80 62       	ori	r24, 0x20	; 32
 122:	80 83       	st	Z, r24
 124:	80 81       	ld	r24, Z
 126:	8b 7f       	andi	r24, 0xFB	; 251
 128:	80 83       	st	Z, r24
 12a:	80 81       	ld	r24, Z
 12c:	88 60       	ori	r24, 0x08	; 8
 12e:	80 83       	st	Z, r24
 130:	8c 91       	ld	r24, X
 132:	82 60       	ori	r24, 0x02	; 2
 134:	8c 93       	st	X, r24
 136:	80 e4       	ldi	r24, 0x40	; 64
 138:	9c e9       	ldi	r25, 0x9C	; 156
 13a:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 13e:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 142:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 146:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 14a:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
 14e:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
 152:	8f e3       	ldi	r24, 0x3F	; 63
 154:	9c e9       	ldi	r25, 0x9C	; 156
 156:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 15a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 15e:	08 95       	ret

00000160 <verticalMove>:
 160:	83 b7       	in	r24, 0x33	; 51
 162:	80 61       	ori	r24, 0x10	; 16
 164:	83 bf       	out	0x33, r24	; 51
 166:	83 b7       	in	r24, 0x33	; 51
 168:	8f 7d       	andi	r24, 0xDF	; 223
 16a:	83 bf       	out	0x33, r24	; 51
 16c:	08 95       	ret

0000016e <verticalStop>:
 16e:	83 b7       	in	r24, 0x33	; 51
 170:	8f 7e       	andi	r24, 0xEF	; 239
 172:	83 bf       	out	0x33, r24	; 51
 174:	83 b7       	in	r24, 0x33	; 51
 176:	80 62       	ori	r24, 0x20	; 32
 178:	83 bf       	out	0x33, r24	; 51
 17a:	08 95       	ret

0000017c <main>:
#include "servoMove.h"
#include "stepMove.h"

int main(void)
{
	DDRA |= (1 << PORTA0);
 17c:	8a b3       	in	r24, 0x1a	; 26
 17e:	81 60       	ori	r24, 0x01	; 1
 180:	8a bb       	out	0x1a, r24	; 26
	
	DDRC |= (1 << PORTC0) | (1 << PORTC1);//vertical, PORTC0 : EN, PORTC1 : CW;
 182:	84 b3       	in	r24, 0x14	; 20
 184:	83 60       	ori	r24, 0x03	; 3
 186:	84 bb       	out	0x14, r24	; 20
	DDRC |= (1 << PORTC4) | (1 << PORTC5);//horizontal, PORTC4 : EN, PORTC5 : CW;
 188:	84 b3       	in	r24, 0x14	; 20
 18a:	80 63       	ori	r24, 0x30	; 48
 18c:	84 bb       	out	0x14, r24	; 20

	PORTC &= ~(1 << PORTC0);//PORTC2 low : enable motor driver
 18e:	85 b3       	in	r24, 0x15	; 21
 190:	8e 7f       	andi	r24, 0xFE	; 254
 192:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1 << PORTC4);//PORTC4 low : enable motor driver
 194:	85 b3       	in	r24, 0x15	; 21
 196:	8f 7e       	andi	r24, 0xEF	; 239
 198:	85 bb       	out	0x15, r24	; 21
	
	//PORTC5 == 1 : left   PORTC5 == 0 : right,
	//
	
	InitializeTimer0();
 19a:	81 df       	rcall	.-254    	; 0x9e <InitializeTimer0>
	InitializeTimer1();
	InitializeTimer2();//PTB7을 OC2 핀으로 사용 OC1C 핀과 겹칩 주의
 19c:	95 df       	rcall	.-214    	; 0xc8 <InitializeTimer2>
	InitializeTimer3();
 19e:	a9 df       	rcall	.-174    	; 0xf2 <InitializeTimer3>
 1a0:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a2:	33 e2       	ldi	r19, 0x23	; 35
 1a4:	84 ef       	ldi	r24, 0xF4	; 244
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	30 40       	sbci	r19, 0x00	; 0
 1aa:	80 40       	sbci	r24, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x2a>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x34>
 1b0:	00 00       	nop
 1b2:	85 b3       	in	r24, 0x15	; 21
		 * 가로축 이동가능 전장 560mm 5600ms
		 */
		
		//가로축 이동가능 전장 560mm 5600mm
		//가로축 최대 이동가능 전장 710mm 17750ms 
		PORTC &= ~(1<<PORTC1);//
 1b4:	8d 7f       	andi	r24, 0xFD	; 253
 1b6:	85 bb       	out	0x15, r24	; 21
		verticalMove();
 1b8:	d3 df       	rcall	.-90     	; 0x160 <verticalMove>
 1ba:	9f ef       	ldi	r25, 0xFF	; 255
 1bc:	23 ee       	ldi	r18, 0xE3	; 227
 1be:	37 e5       	ldi	r19, 0x57	; 87
 1c0:	91 50       	subi	r25, 0x01	; 1
 1c2:	20 40       	sbci	r18, 0x00	; 0
 1c4:	30 40       	sbci	r19, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x44>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x4e>
 1ca:	00 00       	nop
		_delay_ms(1800);
		
		verticalStop();
 1cc:	d0 df       	rcall	.-96     	; 0x16e <verticalStop>
 1ce:	85 b3       	in	r24, 0x15	; 21
		PORTC |= (1<<PORTC0);
 1d0:	81 60       	ori	r24, 0x01	; 1
 1d2:	85 bb       	out	0x15, r24	; 21
 1d4:	8a ea       	ldi	r24, 0xAA	; 170
 1d6:	94 ed       	ldi	r25, 0xD4	; 212
 1d8:	2c e1       	ldi	r18, 0x1C	; 28
 1da:	31 e0       	ldi	r19, 0x01	; 1
 1dc:	81 50       	subi	r24, 0x01	; 1
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	20 40       	sbci	r18, 0x00	; 0
 1e2:	30 40       	sbci	r19, 0x00	; 0
 1e4:	d9 f7       	brne	.-10     	; 0x1dc <main+0x60>
 1e6:	00 00       	nop
 1e8:	85 b3       	in	r24, 0x15	; 21
		_delay_ms(7000);
		PORTC &= ~(1<<PORTC0);	
 1ea:	8e 7f       	andi	r24, 0xFE	; 254
 1ec:	85 bb       	out	0x15, r24	; 21
		
		
		PORTC |= (1<<PORTC1);//
 1ee:	85 b3       	in	r24, 0x15	; 21
 1f0:	82 60       	ori	r24, 0x02	; 2
 1f2:	85 bb       	out	0x15, r24	; 21
		verticalMove();
 1f4:	b5 df       	rcall	.-150    	; 0x160 <verticalMove>
 1f6:	8f ef       	ldi	r24, 0xFF	; 255
 1f8:	93 ee       	ldi	r25, 0xE3	; 227
 1fa:	27 e5       	ldi	r18, 0x57	; 87
 1fc:	81 50       	subi	r24, 0x01	; 1
 1fe:	90 40       	sbci	r25, 0x00	; 0
 200:	20 40       	sbci	r18, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <main+0x80>
 204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x8a>
 206:	00 00       	nop
		_delay_ms(1800);
		
		verticalStop();
 208:	b2 df       	rcall	.-156    	; 0x16e <verticalStop>
 20a:	85 b3       	in	r24, 0x15	; 21
		PORTC |= (1<<PORTC0);
 20c:	81 60       	ori	r24, 0x01	; 1
 20e:	85 bb       	out	0x15, r24	; 21
 210:	3a ea       	ldi	r19, 0xAA	; 170
 212:	84 ed       	ldi	r24, 0xD4	; 212
 214:	9c e1       	ldi	r25, 0x1C	; 28
 216:	21 e0       	ldi	r18, 0x01	; 1
 218:	31 50       	subi	r19, 0x01	; 1
 21a:	80 40       	sbci	r24, 0x00	; 0
 21c:	90 40       	sbci	r25, 0x00	; 0
 21e:	20 40       	sbci	r18, 0x00	; 0
 220:	d9 f7       	brne	.-10     	; 0x218 <main+0x9c>
 222:	00 00       	nop
 224:	85 b3       	in	r24, 0x15	; 21
		_delay_ms(7000);
		PORTC &= ~(1<<PORTC0);	
 226:	8e 7f       	andi	r24, 0xFE	; 254
 228:	85 bb       	out	0x15, r24	; 21
 22a:	c3 cf       	rjmp	.-122    	; 0x1b2 <main+0x36>

0000022c <_exit>:
 22c:	f8 94       	cli

0000022e <__stop_program>:
 22e:	ff cf       	rjmp	.-2      	; 0x22e <__stop_program>
